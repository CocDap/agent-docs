import{_ as a,c as o,ae as t,o as s}from"./chunks/framework.C9QKnS-w.js";const u=JSON.parse('{"title":"DeFi Swap Tool","description":"Developer documentation for the DeFi Swap Tool API using Polkadot Agent Kit","frontmatter":{"title":"DeFi Swap Tool","description":"Developer documentation for the DeFi Swap Tool API using Polkadot Agent Kit","icon":"code"},"headers":[],"relativePath":"tools/defi-tool.md","filePath":"tools/defi-tool.md"}'),i={name:"tools/defi-tool.md"};function n(l,e,r,c,d,p){return s(),o("div",null,e[0]||(e[0]=[t('<h2 id="available-tools" tabindex="-1">Available Tools <a class="header-anchor" href="#available-tools" aria-label="Permalink to &quot;Available Tools&quot;">​</a></h2><table tabindex="0"><thead><tr><th>Tool Name</th><th>Schema</th><th>Purpose</th><th>Input Fields</th></tr></thead><tbody><tr><td><code>swap_tokens</code></td><td><code>swapTokensToolSchema</code></td><td>Swap tokens across different chains using XCM or within a specific DEX</td><td><code>amount</code>, <code>currencyFrom</code>, <code>currencyTo</code>, <code>from</code> (optional for cross-chain), <code>to</code> (optional for cross-chain), <code>dex</code> (optional for DEX-specific), <code>receiver</code> (optional)</td></tr></tbody></table><hr><h2 id="integration" tabindex="-1">Integration <a class="header-anchor" href="#integration" aria-label="Permalink to &quot;Integration&quot;">​</a></h2><p>The DeFi swap features are available out-of-the-box via the Polkadot Agent Kit&#39;s tools:</p><ul><li><code>swapTokensTool()</code></li></ul><hr><h2 id="usage" tabindex="-1">Usage <a class="header-anchor" href="#usage" aria-label="Permalink to &quot;Usage&quot;">​</a></h2><h3 id="cross-chain-swap" tabindex="-1">Cross-Chain Swap <a class="header-anchor" href="#cross-chain-swap" aria-label="Permalink to &quot;Cross-Chain Swap&quot;">​</a></h3><p>Prompt:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>await agent.prompt(&quot;swap 1 DOT from Polkadot to USDT on Hydra&quot;)</span></span></code></pre></div><h3 id="dex-specific-swap" tabindex="-1">DEX-Specific Swap <a class="header-anchor" href="#dex-specific-swap" aria-label="Permalink to &quot;DEX-Specific Swap&quot;">​</a></h3><p>Prompt:</p><div class="language- vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang"></span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span>await agent.prompt(&quot;swap 0.5 DOT to USDT on HydrationDex&quot;)</span></span></code></pre></div><p>Replace values like amounts, currencies, chains, and DEX names as needed.</p><hr><h2 id="how-it-works" tabindex="-1">How It Works <a class="header-anchor" href="#how-it-works" aria-label="Permalink to &quot;How It Works&quot;">​</a></h2><ul><li><p><strong>Cross-Chain Swap:</strong></p><ul><li>The Agent uses the <code>swapTokensTool()</code> from the Polkadot Agent Kit.</li><li>It parses your message for amount, currencyFrom, currencyTo, from chain, to chain, and optional receiver.</li><li>Executes the swap across chains using XCM routing.</li></ul></li><li><p><strong>DEX-Specific Swap:</strong></p><ul><li>The Agent uses the same <code>swapTokensTool()</code> but omits from/to chains.</li><li>Parses for amount, currencyFrom, currencyTo, dex (defaults to HydrationDex), and optional receiver.</li><li>Executes the swap within the specified DEX.</li></ul></li></ul><hr><h2 id="example-code" tabindex="-1">Example Code <a class="header-anchor" href="#example-code" aria-label="Permalink to &quot;Example Code&quot;">​</a></h2><h3 id="get-swap-tokens-tool" tabindex="-1">Get Swap Tokens Tool <a class="header-anchor" href="#get-swap-tokens-tool" aria-label="Permalink to &quot;Get Swap Tokens Tool&quot;">​</a></h3><div class="language-ts vp-adaptive-theme"><button title="Copy Code" class="copy"></button><span class="lang">ts</span><pre class="shiki shiki-themes github-light github-dark vp-code" tabindex="0"><code><span class="line"><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;">const</span><span style="--shiki-light:#005CC5;--shiki-dark:#79B8FF;"> swapTokens</span><span style="--shiki-light:#D73A49;--shiki-dark:#F97583;"> =</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;"> agent.</span><span style="--shiki-light:#6F42C1;--shiki-dark:#B392F0;">swapTokensTool</span><span style="--shiki-light:#24292E;--shiki-dark:#E1E4E8;">();</span></span></code></pre></div><hr>',23)]))}const k=a(i,[["render",n]]);export{u as __pageData,k as default};
